.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_amto_plot_amto_numeric_round.py>`     to download the full example code
    .. rst-class:: sphx-glr-example-title

    .. _sphx_glr_auto_examples_amto_plot_amto_numeric_round.py:


Numeric Rounding Function
========================================================================
Given an array of numbers round it with conditioning formattings.


.. code-block:: default


    # Author: Fan Wang (fanwangecon.github.io)
    import pyfan.amto.numeric.round as pyfan_amto_round
    import numpy as np
    import matplotlib.pyplot as plt








Common rounding
--------------------------------------------------------------


.. code-block:: default


    # construct data inputs
    ar_fl_exa = np.array([0.4334, 0.5183, 0.0454, 0.0027, 0.0002])
    ls_st_numformated_common = pyfan_amto_round.ff_decimal_rounder(ls_fl_num2format=ar_fl_exa, it_or_dc_round_decimal=2)
    print(f'{ls_st_numformated_common=}')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ls_st_numformated_common=['0.43', '0.52', '0.05', '0.00', '0.00']




Uncommon rounding by number size with fractions
--------------------------------------------------------------


.. code-block:: default

    dc_round_decimal = {0.001:4, 0.01:3, 0.1:2, float("inf"):2}
    ls_st_numformated_uncommon = pyfan_amto_round.ff_decimal_rounder_uncommon(ls_fl_num2format=ar_fl_exa,
                                                                              dc_round_decimal=dc_round_decimal)
    print(f'{ls_st_numformated_uncommon=}')






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ls_st_numformated_uncommon=['0.43', '0.52', '0.05', '0.003', '0.0002']




Uncommon rounding by number size test 2 with large numbers
--------------------------------------------------------------


.. code-block:: default

    ls_fl_num2format = [0.0012345, 0.12345, 12.345, 123.45, 1234.5, 123456.789]
    dc_round_decimal = {0.1:4, 1:3, 100:2, float("inf"):0}
    ls_st_numformated_large_uncommon = pyfan_amto_round.ff_decimal_rounder_uncommon(ls_fl_num2format=ls_fl_num2format,
                                                                                    dc_round_decimal=dc_round_decimal)
    print(f'{ls_st_numformated_large_uncommon=}')


    # Start Plot
    fig, ax = plt.subplots()

    # Text Plot
    ax.text(0.5, 0.5, f'{ar_fl_exa}\n{ls_st_numformated_common=}\n{dc_round_decimal=}\n{ls_st_numformated_uncommon=}'
                      f'\n\n{ls_fl_num2format=}\n{dc_round_decimal=}\n{ls_st_numformated_large_uncommon=}',
            horizontalalignment='center',
            verticalalignment='center',
            fontsize=10, color='black',
            transform=ax.transAxes)

    # Labeling
    ax.set_axis_off()
    plt.show()




.. image:: /auto_examples/amto/images/sphx_glr_plot_amto_numeric_round_001.svg
    :alt: plot amto numeric round
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    ls_st_numformated_large_uncommon=['0.0012', '0.123', '12.35', '123', '1234', '123457']





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.083 seconds)


.. _sphx_glr_download_auto_examples_amto_plot_amto_numeric_round.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_amto_numeric_round.py <plot_amto_numeric_round.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_amto_numeric_round.ipynb <plot_amto_numeric_round.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
